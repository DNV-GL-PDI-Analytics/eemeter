Introduction
------------

The OpenEEmeter is an open source software package that uses metered energy
data to manage aggregate demand capacity across a portfolio of retail
customer accounts. The software package consists of three main parts:

1. an Extract-Transform-Load (ETL) toolkit for processing project,
   energy, and building data
   (`github <https://github.com/impactlab/oeem-etl/>`_);
2. a core calculation library (this package) that implements standardized
   methods (`github <https://github.com/impactlab/eemeter/>`_); and
3. a datastore application for storing post-ETL inputs and computed outputs
   (`github <https://github.com/impactlab/oeem-energy-datastore/>`_).

Core use cases
^^^^^^^^^^^^^^

The OpenEEmeter has been designed specifically to provide weather-normalized
energy savings measurements for a portfolio of projects using monthly billing
data or interval smart meter data. The main outputs for this core use case
are project and portfolio-level are:

- Gross Energy Savings
- Annualized Energy Savings
- Realization Rate (when savings predictions are available)

More information about these methods can be found in the
:ref:`architecture-overview` and :ref:`methods-overview` sections.

Other potential use cases
^^^^^^^^^^^^^^^^^^^^^^^^^

The OpenEEmeter can also be configured to manage energy resources across a
portfolio of buildings, including potentially:

- Analytics of raw energy data
- Portfolio management
- Demand side resource management

Background
^^^^^^^^^^

1) Meters and Smart Meters - where does energy data come from?
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Energy data is generated by hardware devices that measure electricity and
natural gas flow. A device like this is generally referred to as a
"meter" (though this is distinct from the software-based "EEmeter"
- see :ref:`eemeter-methods`). The most common and ubiquitous measuring
device is a utility-owned meter used for determining billing. Some utilities
have upgraded their meters to provide hourly or 15-minute interval
measurements. These so-called "smart meters" use Advanced Metering
Infrastructure (AMI) to transmit data back to utilities for processing in
near-real time. Other devices that generate energy data include sub-meters,
external sensors, and embedded sensors.

.. note::

    The "smart" in smart meter can be a bit of a misnomer. Despite higher
    measurement frequency and wireless data transmission, these smart meters
    collect essentially the same data that electricity meters did in the 1950s.
    Each meter datapoint consists of a timestamp and an incremental value of
    consumption. We call this  string of data characterized by paired sets of
    timestamps and meter readings a *trace*. Traces form the basis of the
    energy modeling in the EEmeter.

Just like the odometer in your car doesn’t tell you how fast you are
traveling, the meter on your house doesn’t tell you how much energy you have
consumed. Consumption must be calculated. In the past, energy companies simply
determined your rate of consumption by taking monthly meter readings and
calculating the difference. With smart meters, these datapoints can be
captured more frequently and with greater precision, allowing for more
sophisticated forms of billing.

2) Measuring Energy Savings and the Transition to Demand Side Management
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

The OpenEEmeter replaces traditional approaches to program-related energy
measurement. Utilizing newly available smart meter data, the OpenEEmeter
solves the problem of measuring energy savings and opens new doors for
managing demand side programs.

Historically, energy **savings** have been measured in one of three ways. The
first (and least costly) approach is to take laboratory measurements of
different energy-consuming devices (e.g., light bulbs) and calculate the
difference in consumption from one to the next, then estimate the savings over
a given period of time, taking into consideration typical usage patterns. This
first approach is limited by the accuracy and availability of physical models.

The second (and most costly) approach samples consumption data prior to and
following an intervention of some sort (e.g., an energy efficiency retrofit),
and estimates savings after controlling for building-specific factors like
occupancy, temperature, energy intensity, etc. This second approach is limited
by low availability of data describing these building-specific factors (thus
making it very costly).

A third (post-hoc) approach has recently emerged that takes a population-level
sample of similar buildings and compares with a treatment group of buildings
that have received an energy efficiency upgrade (or other intervention). This
approach assumes that all buildings will be affected equally by exogenous
factors, leaving only endogenous factors (i.e., the efficiency upgrade) to
account for the energy consumption difference.

In the analog era of traditional meters and monthly bills, efforts to improve
energy efficiency emphasized fairly static and permanent changes in
consumption. A whole-home retrofit, for example, would reduce energy demand
without requiring any additional behavioral or lifestyle changes. A one-time
intervention would provide years of benefit, and our metering technology at
the time provided a way to measure the performance of these measures.

With the introduction of smart meters, utilities have transitioned from simple
efficiency programs to a suite of programs under the umbrella of demand side
management (DSM). These new measures fall into three broad categories
including time of day, demand, and net metering. The OpenEEmeter expands the
programmatic interface of energy efficiency to engage with emergent
technologies and market based demand side engagement programs.

3) How the OpenEEmeter is valuable: Baselining, Normalization, and Modeling Energy Use
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Smart meter data allows for more complexity in statistical models. Rather than
relying on simple regression experiments to normalize energy consumption,
analysts can parse the impact of exogenous and endogenous factors
independently and iteratively. The notion of baseload energy use can even be
disaggregated into multiple **demand states**. For example, a home will use
very little energy when empty, a bit more when occupied, and a large amount
when appliances and heating or cooling systems are operating. These demand
states can be measured against various sorts of interventions, thus enabling
both traditional energy efficiency savings measurements, but also leveraging
modern load balancing tools.

The OpenEEmeter calculates energy savings in real time by selecting a sample
of consumption data prior to an intervention, weather-normalizing it to
establish a baseline, and calculating the difference between projected energy
usage and actual energy usage following the intervention. This method
maintains the cost-effectiveness of the naive predicted savings approach, the
real-world integrity of the building efficiency approach, without sacrificing
on time as with the post hoc control group approach.

How it works
^^^^^^^^^^^^

1) Set up and Data Management
"""""""""""""""""""""""""""""

The OpenEEmeter is configured to manage consumption and project data.
Consumption data can be of any sort - from monthly billing data to
high-frequency sensor data. Project data is typically a set of attributes that
can be used for advanced savings analytics, but at minimum must contain a date
to demarcate pre and post intervention periods. Where project and consumption
data originate from different database sources, a common key must be available
to link projects with their respective consumption traces.

The OpenEEmeter comes bundled with an ETL toolkit. If you are deploying the
open source software, you will need to write a parser to load your data into
the ETL pipeline. We rely on a python module called
`luigi <https://luigi.readthedocs.io/>`_ to manage the bulk importation of
data. For more on this, see :ref:`etl-toolkit`.

Parsed consumption and project data are stored in the Datastore alongside
outputs from the calculation engine.

You may decide that you want to use EEmeter results to analyze project data
that does not get parsed and uploaded into the Datastore. We have made it easy
to export your EEmeter results through an API or through a web interface.
Other options include a direct database connection to a BI tool like Tableau
or Salesforce.

2) EEmeter inputs
"""""""""""""""""

The EEmeter requires a combination of consumption data, project data, and
weather data to calculate weather-normalized savings. At its most rudimentary,
the EEmeter requires a **trace** of consumption data along with project data
indicating the completion date and location of the project. The EEmeter will
reject traces not meeting built-in data sufficiency requirements.

Project data is important because it allows savings estimates to be
calculated. The completion of a **project** (which can be thought of as any
intervention for which there is an expected change in energy consumption)
demarcates the shift between a baseline modeling period and a reporting
modeling period (explained below in the methods section).

.. _eemeter-methods:

3) EEmeter methods
""""""""""""""""""

The EEmeter provides multiple methods for calculating energy savings. The most
conventional methods use weather normalization to calculate energy savings.
Fundamentally, this means that once a relationship between weather patterns
and energy consumption in a particular building is established, counterfactual
usage parameters can be used to calculate savings against a projected baseline.

As noted above, we term a set of consumption data points a **trace**. A trace
can be broken down into component periods used for calculating savings. Most
important is the baseline period. Baseline period consumption data is modeled
to establish the relationship between weather and consumption for a building
prior to an intervention. Different buildings will have different
relationships between their energy use and the weather. Some will be
relatively more insulated, others will be built differently, and others will
be exposed to light differently. These differences create a better or worse
fit between energy use and weather. Statistically, we will have higher
confidence in the savings estimate for a particular building when there is a
stronger, more consistent relationship with the weather.

Once we have calculated a weather model, we can apply that model to a sample
"normal" weather year. We understand what a typical house’s usage is relative
to the weather, but we don’t necessarily want to use the previous weather year
as our baseline (there may be some particular idiosyncrasies that we want to
avoid). By estimating consumption relative to an average year, we reduce the
likelihood of bias in the savings estimate.

If we have a full year of post-intervention data, we can replicate this
process for our reporting period. We calculate a new model for the
relationship between weather and consumption for our reporting period and
estimate consumption in the same "normal" year as our baseline. If the
intervention has resulted in lower energy use relative to the weather, the
output will show a reduction in consumption relative to the baseline. By
referencing the same "normal" year, we can be reassured that there are fewer
arbitrary factors influencing the results.

When there is not a full year of data for the reporting period, we can instead
turn to the actual consumption recorded at the meter for measuring savings.
We simply take the estimate generated by the baseline model and apply it to
the temperature for any point in the reporting period. We subtract the
consumption from the matching timestamp to generate the savings value.

When we measure savings using daily or hourly usage increments, additional
controls are required. For example, energy use on weekends is typically
systematically different than on weekdays and must be treated differently.
Likewise, overnight energy use looks very different than daytime energy use
even when weather conditions are the same. For these types of systematic
differences, we introduce a number of new methods. The most straightforward
is a "fixed-effects" method that takes into account the day of the week. This
and other modifications to the core method are designed to produce a more
accurate model for establishing a relationship between weather conditions and
energy usage, thus making our savings estimates more reliable.

4) EEmeter outputs
""""""""""""""""""

EEmeter outputs.
